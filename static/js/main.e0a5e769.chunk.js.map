{"version":3,"sources":["components/items/Item.js","store/actions/cart.js","store/actions/actionTypes.js","components/items/ItemInfo.js","components/items/ItemList.js","components/cart/Cart.js","components/layout/Navbar.js","App.js","store/reducers/cart.js","store/reducers/item.js","index.js"],"names":["addToCart","data","type","payload","theme","createMuiTheme","spacing","styles","makeStyles","cardContent","display","cardActions","marginLeft","select","height","margin","cardItem","qty","i","push","label","value","connect","dispatch","onAddItemToCart","item","itemQty","actionCreators","props","_useState","useState","_useState2","Object","slicedToArray","amount","setAmount","classes","react_default","a","createElement","Grid","md","sm","Card","className","CardActionArea","react_router_dom","to","concat","id","CardMedia","component","alt","image","title","CardContent","Typography","variant","name","price","CardActions","Select","onChange","e","target","map","option","MenuItem","key","Button","size","color","onClick","ShoppingCart_default","wrapper","marginRight","marginTop","state","items","itemList","length","items_Item","container","useStyles","root","width","overflowX","table","minWidth","checkout","padding","total","cartCheckout","cart","removeFromCart","toggleCheckout","setToggleCheckout","handleClose","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","history","alert","autoFocus","xs","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","cartItem","scope","subtotal","toFixed","colSpan","Box","flexDirection","totalPrice","justifyContent","ownProps","match","params","find","itemInfo","itemWrapper","Fragment","ArrowBack_default","defineProperty","breakpoints","down","grow","flexGrow","up","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","link","textDecoration","&:hover","cartCount","totalQty","AppBar","position","navbar","Toolbar","noWrap","IconButton","menuButton","aria-label","Badge","badgeContent","App","layout_Navbar","CssBaseline","react_router","exact","path","ItemList","ItemInfo","Cart","initialState","reducer","arguments","undefined","action","updatedQty","updatedTotal","objectSpread","toConsumableArray","updatedCart","filter","updatedQtyRemoved","uuid","rootReducer","combineReducers","CartReducer","ItemReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","console","log","result","getState","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e0a5e769.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nconst theme = createMuiTheme({\r\n    spacing: 2\r\n})\r\n\r\nconst styles = makeStyles(({\r\n    cardContent: {\r\n        display: 'flex',\r\n    },\r\n    cardActions: {\r\n        marginLeft: '10px',\r\n    },\r\n    select: {\r\n        // width: 'auto',\r\n        height: 'auto',\r\n        margin: theme.spacing(4),\r\n    },\r\n    cardItem: {\r\n        margin: '10px'\r\n    }\r\n}));\r\n\r\nconst qty = [];\r\n\r\nfor(let i = 1; i <= 5; i++){\r\n    qty.push({label: i, value: i});\r\n}\r\n\r\nconst Item = props => {\r\n    const [ amount, setAmount ] = useState(0);\r\n    const  {item } = props;\r\n    const classes = styles();\r\n\r\n    const handleChange = e => {\r\n        setAmount(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <Grid item md={3} sm={6}>\r\n            <Card className={classes.cardItem}>\r\n                <CardActionArea>\r\n                    <Link to={`/item/${item.id}`}>\r\n                        <CardMedia \r\n                            component=\"img\"\r\n                            alt=\"image\"\r\n                            height=\"140\"\r\n                            image=\"https://dummyimage.com/250x250/858585/fff\"\r\n                            title=\"sample image\"\r\n                        />\r\n                    </Link>\r\n                </CardActionArea>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {item.name}\r\n                    </Typography>\r\n                    <Typography component=\"p\">\r\n                        ${item.price}\r\n                    </Typography>\r\n                </CardContent>\r\n                <div className={classes.cardContent}>\r\n                    <CardActions className={classes.cardActions}>\r\n                        <Select\r\n                            className={classes.select}\r\n                            label=\"Qty\"\r\n                            value={amount}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {qty.map(option => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        <Button size=\"small\" color=\"primary\" onClick={() => {\r\n                            props.onAddItemToCart(item, amount);\r\n                            setAmount(0);\r\n                            }}>\r\n                            <ShoppingCart/>\r\n                            Add to Cart \r\n                        </Button>\r\n                    </CardActions>\r\n                </div>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddItemToCart: (item, itemQty) => dispatch(actionCreators.addToCart({item, qty: itemQty})),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Item);","import * as actionTypes from './actionTypes';\r\n\r\nexport const addToCart = (data) => {\r\n    return {\r\n        type: actionTypes.ADD_TO_CART,\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport const removeFromCart = (item) => {\r\n    return {\r\n        type: actionTypes.REMOVE_TO_CART,\r\n        payload: item\r\n    };\r\n};\r\n\r\nexport const checkout = () => {\r\n    return {\r\n        type: actionTypes.CHECKOUT\r\n    };\r\n};","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_TO_CART = 'REMOVE_TO_CART';\r\nexport const CHECKOUT = 'CHECKOUT';\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { Button, Grid, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nconst theme = createMuiTheme({\r\n    spacing: 2\r\n})\r\n\r\nconst styles = makeStyles(({\r\n    wrapper: {\r\n        marginTop: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    select: {\r\n        width: 'auto',\r\n        margin: theme.spacing(2),\r\n    }\r\n})); \r\n\r\nconst qty = [];\r\n\r\nfor(let i = 1; i <= 5; i++){\r\n    qty.push({label: i, value: i});\r\n}\r\n\r\nconst ItemInfo = (props) => {\r\n    const [amount, setAmount] = useState(0);\r\n    const classes = styles();\r\n    const { item } = props\r\n\r\n    const handleChange = e => {\r\n        setAmount(e.target.value)\r\n    }\r\n\r\n    const itemInfo = item ? (\r\n        <div className={classes.itemWrapper}>\r\n            <Typography variant=\"h5\">{item.name}</Typography>\r\n            <Typography>${item.price}</Typography>\r\n            <hr/>\r\n            <Select\r\n                className={classes.select}\r\n                label=\"Qty\"\r\n                value={amount}\r\n                onChange={handleChange}\r\n            >\r\n                {qty.map(option => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            <Button size=\"small\" color=\"primary\" onClick={() => {\r\n                props.onAddItemToCart(item, amount);\r\n                setAmount(0);\r\n                }}>\r\n                <ShoppingCart/>\r\n                Add to Cart\r\n            </Button>\r\n        </div>\r\n        \r\n    ) : (<p>none</p>);\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/\">\r\n                <Typography>\r\n                <ArrowBack/>\r\n                    Return to Items\r\n                </Typography>\r\n            </Link>\r\n            <Grid container className={classes.wrapper}>\r\n                {itemInfo}\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.match.params.id;\r\n    return {\r\n        item: state.item.items.find(item => item.id === id )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddItemToCart: (item, itemQty) => dispatch(actionCreators.addToCart({item, qty: itemQty})),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemInfo);","import React  from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Grid } from '@material-ui/core'\r\nimport Item from './Item';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    wrapper: {\r\n        marginLeft: '10%',\r\n        marginRight: '10%',\r\n        marginTop: 'auto',\r\n    }\r\n})); \r\n\r\nconst ItemList = (props) => {\r\n    const classes = styles();\r\n    const { items } = props;\r\n\r\n    const itemList = items.length ? (\r\n        items.map(item => { \r\n            return(\r\n                <Item item={item} key={item.id}/>\r\n            )\r\n        })\r\n    ) : (\r\n        <p>No Items Found!</p>\r\n    )\r\n\r\n    return(\r\n        <Grid container spacing={2} className={classes.wrapper}>\r\n            {itemList}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    items: state.item.items\r\n})\r\n\r\nexport default connect(mapStateToProps)(ItemList);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Table, TableBody, TableCell, TableHead, TableRow, Paper, Typography } from '@material-ui/core';\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nconst theme = createMuiTheme({\r\n    spacing: 1\r\n})\r\n\r\nconst useStyles = makeStyles(({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    wrapper: {\r\n        margin: '4%'\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    checkout: {\r\n        padding: '15px',\r\n    },\r\n    total: {\r\n        marginLeft: 'auto',\r\n    }\r\n}));\r\n\r\nconst Cart = (props) => {  \r\n    const classes = useStyles();\r\n    const { cartCheckout } = props;\r\n    const [toggleCheckout, setToggleCheckout] = useState(false)\r\n\r\n    const onRemoveFromCart = (id) => {\r\n        props.removeFromCart(id);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setToggleCheckout(false)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        props.history.push('/shopping-cart');\r\n        alert('You have successfully checked out! Thanks for shopping.');\r\n        props.checkout();\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={5} className={classes.wrapper}>\r\n            <div>\r\n                <Dialog\r\n                    open={toggleCheckout}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Checkout Confirmation\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Are you sure you want to checkout now?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\" autoFocus>\r\n                        Yes\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            <Grid item md={9} xs={12}>\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Item Name</TableCell>\r\n                            <TableCell align=\"right\">Quantity</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                            <TableCell align=\"right\">Total</TableCell>\r\n                            <TableCell align=\"right\">Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cartCheckout.cart.length !== 0 ? \r\n                        (cartCheckout.cart.map(cartItem => (\r\n                            <TableRow key={cartItem.id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {cartItem.name}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{cartItem.qty}</TableCell>\r\n                            <TableCell align=\"right\">${cartItem.price}</TableCell>\r\n                            <TableCell align=\"right\">${cartItem.subtotal.toFixed(2)}</TableCell>\r\n                            <TableCell align=\"right\"><Button onClick={() => onRemoveFromCart(cartItem)}>X</Button></TableCell>\r\n                            </TableRow>\r\n                        ))) : \r\n                        (<TableRow>\r\n                            <TableCell colSpan={5}>\r\n                                <Typography align=\"center\">The cart is empty.</Typography> \r\n                            </TableCell>\r\n                        </TableRow>) }\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n            </Grid>\r\n            <Grid item md={3} xs={12}>\r\n                <Paper className={classes.checkout}>\r\n                    <Typography>Checkout</Typography>\r\n                    <Box display=\"flex\" flexDirection=\"row\">\r\n                        <Box variant=\"h5\">Total: </Box>\r\n                        <Box className={classes.total} variant=\"h6\">${cartCheckout.totalPrice.toFixed(2)}</Box>\r\n                    </Box>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => setToggleCheckout(true)}>\r\n                        <Typography>\r\n                            Confirm checkout\r\n                        </Typography>\r\n                    </Button>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cartCheckout: state.cart\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeFromCart: (id) => dispatch(actionCreators.removeFromCart(id)),\r\n    checkout: () => dispatch(actionCreators.checkout()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Badge, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        margin: '5%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '10%',\r\n        }\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        }\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%',\r\n    },\r\n    inputInput: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(10),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 120,\r\n            '&:focus': {\r\n                width: 200,\r\n            },\r\n        },\r\n    },\r\n    link: {\r\n        color: '#fff',\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n            color: '#ffff00'\r\n        }\r\n    },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n    const classes= styles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" className={classes.navbar}>\r\n                <Toolbar>\r\n                    <Link to=\"/shopping-cart\" className={classes.link}>\r\n                        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>Shopping Cart</Typography>\r\n                    </Link>\r\n                    <div className={classes.grow} />\r\n                    <Link to=\"/cart\" className={classes.link}>\r\n                        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\r\n                            <Badge badgeContent={props.cartCount} color=\"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    cartCount: state.cart.totalQty,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport ItemList from './components/items/ItemList';\r\nimport Cart from './components/cart/Cart';\r\nimport ItemInfo from './components/items/ItemInfo';\r\nimport Navbar from './components/layout/Navbar';\r\nimport { CssBaseline, Grid } from '@material-ui/core';\r\n\r\n\r\nconst App = () => {\r\n    return(\r\n        <Router>\r\n            <Navbar />\r\n            <CssBaseline />\r\n            <Grid container>\r\n                <Switch>\r\n                    <Route exact path=\"/shopping-cart\" component={ItemList}></Route>\r\n                    <Route exact path=\"/item/:id\" component={ItemInfo}></Route>\r\n                    <Route exact path=\"/cart\" component={Cart}></Route>\r\n                </Switch>\r\n            </Grid>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cart: [],\r\n    totalQty: 0,\r\n    totalPrice: 0,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_TO_CART:\r\n            const updatedQty = state.totalQty + action.payload.qty\r\n            const updatedTotal = state.totalPrice + (action.payload.qty * action.payload.item.price)\r\n            if(action.payload.qty === 0){\r\n                return {\r\n                    ...state,\r\n                    cart: [...state.cart]\r\n                };\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cart: [\r\n                        ...state.cart,\r\n                        {...action.payload.item,\r\n                            qty: action.payload.qty,\r\n                            subtotal: action.payload.qty * action.payload.item.price\r\n                        }\r\n                    ],\r\n                    totalQty: updatedQty,\r\n                    totalPrice: updatedTotal\r\n                };\r\n            }\r\n            \r\n        case actionTypes.REMOVE_TO_CART:\r\n            const updatedCart = state.cart.filter(item => item.id !== action.payload.id);\r\n            const updatedQtyRemoved = state.totalQty - action.payload.qty;\r\n            return {\r\n                ...state,\r\n                cart: updatedCart,\r\n                totalQty: updatedQtyRemoved\r\n            }\r\n        case actionTypes.CHECKOUT:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import uuid from 'uuid';\r\n\r\nconst initialState = {\r\n    items: [\r\n        {id: uuid(), name: 'Cereal', price: 0.99},\r\n        {id: uuid(), name: 'Milk', price: 1.99},\r\n        {id: uuid(), name: 'Eggs', price: 2.99},\r\n        {id: uuid(), name: 'Beef', price: 5.99},\r\n        {id: uuid(), name: 'Fish', price: 3.99},\r\n        {id: uuid(), name: 'Bread', price: 2.99}\r\n    ]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport CartReducer from './store/reducers/cart';\nimport ItemReducer from './store/reducers/item';\n\nconst rootReducer = combineReducers({\n    cart: CartReducer,\n    item: ItemReducer\n})\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] Next state', store.getState())\n            return result;\n        }\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}