{"version":3,"sources":["components/items/Item.js","store/actions/cart.js","store/actions/actionTypes.js","components/items/ItemList.js","components/layout/Navbar.js","App.js","store/reducers/cart.js","store/reducers/item.js","index.js"],"names":["qty","i","push","label","value","Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","amount","_this2","_this$props","item","classes","react_default","a","createElement","index_es","md","sm","className","cardItem","component","alt","height","image","title","variant","name","price","cardContent","cardActions","select","id","textField","onChange","e","setState","target","map","option","key","size","color","onClick","onAddItemToCart","ShoppingCart_default","Component","connect","dispatch","itemQty","type","payload","withStyles","theme","display","marginLeft","width","ItemList","items","itemList","length","items_Item","container","spacing","wrapper","marginRight","marginTop","Navbar","console","log","cartCount","root","position","navbar","noWrap","grow","search","searchIcon","Search_default","placeholder","inputRoot","input","inputInput","menuButton","aria-label","badgeContent","cart","totalQty","defineProperty","margin","breakpoints","down","flexGrow","up","borderRadius","shape","unit","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","App","Fragment","layout_Navbar","items_ItemList","initialState","reducer","arguments","undefined","action","updatedQty","objectSpread","toConsumableArray","concat","uuid","rootReducer","combineReducers","CartReducer","ItemReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","result","getState","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c7c3bfca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, MenuItem, TextField, Typography } from '@material-ui/core';\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport * as actionCreators from '../../store/actions/index'\r\n\r\nconst styles = theme => ({\r\n    cardContent: {\r\n        display: 'flex',\r\n    },\r\n    cardActions: {\r\n        marginLeft: '10px',\r\n    },\r\n    textField: {\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nconst qty = [];\r\n\r\nfor(let i = 1; i <= 5; i++){\r\n    qty.push({label: i, value: i});\r\n}\r\n\r\n\r\n\r\n\r\nclass Item extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            amount: 0,\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {item, classes} = this.props;\r\n        // console.log(this.state.amount)\r\n\r\n        const handleChange = e => {\r\n            this.setState({\r\n                amount: e.target.value\r\n            })\r\n        }\r\n\r\n        return(\r\n            <Grid item md={3} sm={6}>\r\n                <Card className={classes.cardItem}>\r\n                    <CardActionArea>\r\n                        <CardMedia \r\n                            component=\"img\"\r\n                            alt=\"image\"\r\n                            height=\"140\"\r\n                            image=\"https://dummyimage.com/250x250/858585/fff\"\r\n                            title=\"sample image\"\r\n                        />\r\n                    </CardActionArea>\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {item.name}\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            ${item.price}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <div className={classes.cardContent}>\r\n                        <CardActions className={classes.cardActions}>\r\n                            <TextField\r\n                                select\r\n                                id=\"outlined-adornment-amount\"\r\n                                className={classes.textField}\r\n                                variant=\"outlined\"\r\n                                label=\"Qty\"\r\n                                value={this.state.amount}\r\n                                onChange={handleChange}\r\n                            >\r\n                                {qty.map(option => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            <Button size=\"small\" color=\"primary\" onClick={() => {\r\n                                this.props.onAddItemToCart(item, this.state.amount);\r\n                                this.setState({\r\n                                    amount: 0,\r\n                                })\r\n                                }}>\r\n                                <ShoppingCart/>\r\n                                Add to Cart \r\n                            </Button>\r\n                        </CardActions>\r\n                    </div>\r\n                </Card>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     cart: state.cart\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddItemToCart: (item, itemQty) => dispatch(actionCreators.addToCart({item, qty: itemQty})),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(Item));","import * as actionTypes from './actionTypes';\r\n\r\nexport const addToCart = (data) => {\r\n    return {\r\n        type: actionTypes.ADD_TO_CART,\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport const removeToCart = () => {\r\n    return {\r\n        type: actionTypes.REMOVE_TO_CART\r\n    };\r\n};\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_CART\r\n    };\r\n};","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_TO_CART = 'REMOVE_TO_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Grid } from '@material-ui/core'\r\nimport Item from './Item';\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n        marginLeft: '15%',\r\n        marginRight: '15%',\r\n        marginTop: 'auto',\r\n    }\r\n}); \r\n\r\nclass ItemList extends Component {\r\n    render(){\r\n        const { items, classes } = this.props;\r\n\r\n        const itemList = items.length ? (\r\n            items.map(item => { \r\n                return(\r\n                    <Item item={item} key={item.id}/>\r\n                )\r\n            })\r\n        ) : (\r\n            <p>No Items Found!</p>\r\n        )\r\n\r\n        return(\r\n            <Grid container spacing={40} className={classes.wrapper}>\r\n                {itemList}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    items: state.item.items\r\n})\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(ItemList));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Badge, IconButton, InputBase, Toolbar, Typography } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        margin: '5%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '10%',\r\n        }\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        }\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing.unit,\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing.unit * 9,\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%',\r\n    },\r\n    inputInput: {\r\n        paddingTop: theme.spacing.unit,\r\n        paddingRight: theme.spacing.unit,\r\n        paddingBottom: theme.spacing.unit,\r\n        paddingLeft: theme.spacing.unit * 10,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 120,\r\n            '&:focus': {\r\n                width: 200,\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nclass Navbar extends Component {\r\n    render(){\r\n        const { classes } = this.props;\r\n        console.log(this.props.cartCount);\r\n        return(\r\n            <div className={classes.root}>\r\n                <AppBar position=\"fixed\" className={classes.navbar}>\r\n                    <Toolbar>\r\n                        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>Shopping Cart</Typography>\r\n                        <div className={classes.grow} />\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\r\n                            <Badge badgeContent={this.props.cartCount} color=\"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    cartCount: state.cart.totalQty,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Navbar));","import React from 'react';\r\n\r\nimport ItemList from './components/items/ItemList';\r\nimport Navbar from './components/layout/Navbar';\r\nimport { CssBaseline, Grid } from '@material-ui/core';\r\n\r\nconst App = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Navbar />\r\n            <Grid container>\r\n                <ItemList />\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default App;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cart: [],\r\n    totalQty: 0\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_TO_CART:\r\n            const updatedQty = state.totalQty + action.payload.qty\r\n\r\n            if(action.payload.qty === 0){\r\n                return {\r\n                    ...state,\r\n                    cart: [...state.cart]\r\n                };\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cart: [\r\n                        ...state.cart,\r\n                        {...action.payload.item,\r\n                        qty: action.payload.qty}\r\n                    ],\r\n                    totalQty: updatedQty\r\n                };\r\n            }\r\n            \r\n        case actionTypes.REMOVE_TO_CART:\r\n            return state;\r\n        case actionTypes.CLEAR_CART:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import uuid from 'uuid';\r\n\r\nconst initialState = {\r\n    items: [\r\n        {id: uuid(), name: 'Cereal', price: 0.99},\r\n        {id: uuid(), name: 'Milk', price: 1.99},\r\n        {id: uuid(), name: 'Eggs', price: 2.99},\r\n        {id: uuid(), name: 'Beef', price: 5.99},\r\n        {id: uuid(), name: 'Fish', price: 3.99},\r\n        {id: uuid(), name: 'Bread', price: 2.99}\r\n    ]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport CartReducer from './store/reducers/cart';\nimport ItemReducer from './store/reducers/item';\n\nconst rootReducer = combineReducers({\n    cart: CartReducer,\n    item: ItemReducer\n})\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] Next state', store.getState())\n            return result;\n        }\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}